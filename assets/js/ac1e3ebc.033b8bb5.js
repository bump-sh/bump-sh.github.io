"use strict";(self.webpackChunkbump_sh_github_io=self.webpackChunkbump_sh_github_io||[]).push([[633],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),c=l(n),d=a,h=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return n?o.createElement(h,r(r({ref:t},s),{},{components:n})):o.createElement(h,r({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=d;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u[c]="string"==typeof e?e:a,r[1]=u;for(var l=2;l<i;l++)r[l]=n[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2281:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>u,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const i={},r="GitHub Action",u={unversionedId:"continuous-integration/github-actions",id:"continuous-integration/github-actions",title:"GitHub Action",description:"Generate your API documentation & changelog",source:"@site/docs/help/continuous-integration/github-actions.md",sourceDirName:"continuous-integration",slug:"/continuous-integration/github-actions",permalink:"/help/continuous-integration/github-actions",draft:!1,editUrl:"https://github.com/bump-sh/docs/tree/main/docs/help/continuous-integration/github-actions.md",tags:[],version:"current",frontMatter:{},sidebar:"help",previous:{title:"Continuous integration",permalink:"/help/continuous-integration/"},next:{title:"Specifications Support",permalink:"/help/specifications-support/"}},p={},l=[{value:"Generate your API documentation &amp; changelog",id:"generate-your-api-documentation--changelog",level:2},{value:"Usage",id:"usage",level:2},{value:"Deploy on <code>git push</code>",id:"deploy-on-git-push",level:3},{value:"API diff on pull requests",id:"api-diff-on-pull-requests",level:3},{value:"API diff on pull requests &amp; Deploy on push",id:"api-diff-on-pull-requests--deploy-on-push",level:3},{value:"Input parameters",id:"input-parameters",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2},{value:"Code of Conduct",id:"code-of-conduct",level:2}],s={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"github-action"},"GitHub Action"),(0,a.kt)("h2",{id:"generate-your-api-documentation--changelog"},"Generate your API documentation & changelog"),(0,a.kt)("p",null,"Bump is a Continuous Documentation Platform: it lets you keep your API doc always synchronized with your codebase. With this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/actions"},"Github Action")," you can automatically generate your API reference (with changelog and diff) on ",(0,a.kt)("a",{parentName:"p",href:"https://bump.sh"},"Bump")," from any ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification"},"OpenAPI")," or ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/asyncapi/asyncapi"},"AsyncAPI")," file."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Start by creating a documentation on ",(0,a.kt)("a",{parentName:"p",href:"https://bump.sh/users/sign_up"},"Bump"),". Then add one of the following workflow file to your GitHub project."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"In all the examples below, make sure to change the branch name ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"em"},"main"),"_with the name of your repository main destination branch, replace "),(0,a.kt)("inlineCode",{parentName:"p"},"<BUMP_DOC_ID>"),(0,a.kt)("em",{parentName:"p"}," with your Bump documentation slug or id and change the filepath"),(0,a.kt)("inlineCode",{parentName:"p"},"doc/api-documentation.yml"),"_with your api specification file path.")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/actions/checkout"},(0,a.kt)("inlineCode",{parentName:"a"},"actions/checkout"))," has to be called ",(0,a.kt)("strong",{parentName:"p"},"before our action"),".")),(0,a.kt)("h3",{id:"deploy-on-git-push"},"Deploy on ",(0,a.kt)("inlineCode",{parentName:"h3"},"git push")),(0,a.kt)("p",null,"If you only need to deploy the documentation on push you can use this workflow file:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".github/workflows/bump-deploy.yml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Deploy documentation\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  deploy-doc:\n    name: Deploy API doc on Bump\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n      - name: Deploy API documentation\n        uses: bump-sh/github-action@v1\n        with:\n          doc: <BUMP_DOC_ID>\n          token: ${{secrets.BUMP_TOKEN}}\n          file: doc/api-documentation.yml\n")),(0,a.kt)("h3",{id:"api-diff-on-pull-requests"},"API diff on pull requests"),(0,a.kt)("p",null,"If you only want to have API diff summary sent as a comment on your pull requests:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".github/workflows/bump-diff.yml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: API diff\n\non:\n  pull_request:\n    branches:\n      - main\n\npermissions:\n  contents: read\n  pull-requests: write\n\njobs:\n  api-diff:\n    name: Check API diff on Bump\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n      - name: Comment pull request with API diff\n        uses: bump-sh/github-action@v1\n        with:\n          doc: <BUMP_DOC_ID>\n          token: ${{secrets.BUMP_TOKEN}}\n          file: doc/api-documentation.yml\n          command: diff\n        env:\n          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}\n")),(0,a.kt)("h3",{id:"api-diff-on-pull-requests--deploy-on-push"},"API diff on pull requests & Deploy on push"),(0,a.kt)("p",null,"This is the most common workflow that we ",(0,a.kt)("a",{parentName:"p",href:"https://help.bump.sh/continuous-integration#integrate-with-your-ci"},"recommend"),", which will create two steps in your automation flow: a validation & diff step on code reviews, followed by a deployment step on merged changes."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".github/workflows/bump.yml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Check & deploy API documentation\n\non:\n  push:\n    branches:\n      - main\n\n  pull_request:\n    branches:\n      - main\n\npermissions:\n  contents: read\n  pull-requests: write\n\njobs:\n  deploy-doc:\n    if: ${{ github.event_name == 'push' }}\n    name: Deploy API documentation on Bump\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n      - name: Deploy API documentation\n        uses: bump-sh/github-action@v1\n        with:\n          doc: <BUMP_DOC_ID>\n          token: ${{secrets.BUMP_TOKEN}}\n          file: doc/api-documentation.yml\n\n  api-diff:\n    if: ${{ github.event_name == 'pull_request' }}\n    name: Check API diff on Bump\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n      - name: Comment pull request with API diff\n        uses: bump-sh/github-action@v1\n        with:\n          doc: <BUMP_DOC_ID>\n          token: ${{secrets.BUMP_TOKEN}}\n          file: doc/api-documentation.yml\n          command: diff\n        env:\n          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Since ",(0,a.kt)("a",{parentName:"p",href:"https://github.blog/changelog/2023-02-02-github-actions-updating-the-default-github_token-permissions-to-read-only/"},"February 2nd, 2023"),", the default GITHUB_TOKEN permissions are set to read-only\nfor every new repository."),(0,a.kt)("p",{parentName:"admonition"},"Permissions have to be explicitly defined in your workflows, as illustrated above.")),(0,a.kt)("h2",{id:"input-parameters"},"Input parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"doc")," (required): Documentation slug (or id). Can be found in the documentation settings on ",(0,a.kt)("a",{parentName:"p",href:"https://bump.sh/docs"},"https://bump.sh/docs"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"token")," (required): Do not add your documentation token here, but create an ",(0,a.kt)("a",{parentName:"p",href:"https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets"},"encrypted secret")," that holds your documentation token."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Your Bump token can be found in the documentation settings on ",(0,a.kt)("a",{parentName:"li",href:"https://bump.sh"},"https://bump.sh"),". Copy it for later usage."),(0,a.kt)("li",{parentName:"ul"},"In your GitHub repository, click Settings, and then Secrets."),(0,a.kt)("li",{parentName:"ul"},"Click the button \u201cNew repository secret\u201d, name the secret ",(0,a.kt)("inlineCode",{parentName:"li"},"BUMP_TOKEN")," and paste your Bump token in the value field."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"file"),": Relative path to the documentation file. ",(0,a.kt)("em",{parentName:"p"},"Default: ",(0,a.kt)("strong",{parentName:"em"},(0,a.kt)("inlineCode",{parentName:"strong"},"api-contract.yml")),"."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"command"),": Bump command to execute. ",(0,a.kt)("em",{parentName:"p"},"Default: __",(0,a.kt)("inlineCode",{parentName:"em"},"deploy"))),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"deploy")," deploy a new version of the documentation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"diff"),": automatically comment your pull request with the API diff"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dry-run"),": validate the documentation file before a deployment"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"preview"),": create a temporary preview")))),(0,a.kt)("h2",{id:"contributing"},"Contributing"),(0,a.kt)("p",null,"Bug reports and pull requests are welcome on GitHub at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bump-sh/github-action"},"https://github.com/bump-sh/github-action"),". This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the ",(0,a.kt)("a",{parentName:"p",href:"http://contributor-covenant.org"},"Contributor Covenant")," code of conduct."),(0,a.kt)("h2",{id:"license"},"License"),(0,a.kt)("p",null,"The scripts and documentation in this project are released under the ",(0,a.kt)("a",{parentName:"p",href:"https://app.gitbook.com/s/-LcGTglveItuwKl8raFP/continuous-integration/LICENSE"},"MIT License"),"."),(0,a.kt)("h2",{id:"code-of-conduct"},"Code of Conduct"),(0,a.kt)("p",null,"Everyone interacting in the Bump ",(0,a.kt)("inlineCode",{parentName:"p"},"github-action")," project codebase, issue trackers, chat rooms and mailing lists is expected to follow the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bump-sh/github-action/blob/master/CODE_OF_CONDUCT.md"},"code of conduct"),"."))}c.isMDXComponent=!0}}]);