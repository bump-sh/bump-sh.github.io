"use strict";(self.webpackChunkbump_sh_github_io=self.webpackChunkbump_sh_github_io||[]).push([[8964],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Enhanced Specifications Support",tags:["Improvement"]},i=void 0,p={permalink:"/product-updates/2023/01/27/enhanced-specifications-support",editUrl:"https://github.com/bump-sh/docs/tree/main/docs/product-updates/2023-01-27-enhanced-specifications-support.md",source:"@site/docs/product-updates/2023-01-27-enhanced-specifications-support.md",title:"Enhanced Specifications Support",description:"Over the past weeks, we have considerably enhanced our support of the specifications.",date:"2023-01-27T00:00:00.000Z",formattedDate:"January 27, 2023",tags:[{label:"Improvement",permalink:"/product-updates/tags/improvement"}],hasTruncateMarker:!1,authors:[],frontMatter:{title:"Enhanced Specifications Support",tags:["Improvement"]},prevItem:{title:"Lightning-fast API Documentation rendering",permalink:"/product-updates/2023/06/03/lightning-fast-api-documentation-rendering"},nextItem:{title:"Improved Access Management",permalink:"/product-updates/2022/12/07/improved-access-management"}},s={authorsImageUrls:[]},c=[{value:"minLength, maxLength and pattern",id:"minlength-maxlength-and-pattern",level:2},{value:"readOnly  and  writeOnly  properties",id:"readonly--and--writeonly--properties",level:2}],l={toc:c};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Over the past weeks, we have considerably enhanced our support of the specifications."),(0,a.kt)("h2",{id:"minlength-maxlength-and-pattern"},"minLength, maxLength and pattern"),(0,a.kt)("p",null,"Wherever you need to document restrictions on string fields, OpenAPI and AsyncAPI specifications rely on JSON Schema to support this.\n",(0,a.kt)("inlineCode",{parentName:"p"},"minLength")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"maxLength"),"  are meant to constrain the length of a string.\n",(0,a.kt)("inlineCode",{parentName:"p"},"pattern"),"  restrict the string to a specific Regular Expression (regex)."),(0,a.kt)("p",null,"Email addresses, IBANs and ZIP/Postal codes could be great examples of these features."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"minlength-example.png",src:n(1358).Z,width:"1200",height:"1085"})),(0,a.kt)("h2",{id:"readonly--and--writeonly--properties"},"readOnly  and  writeOnly  properties"),(0,a.kt)("p",null,"JSON Schema allows defining a property as ",(0,a.kt)("inlineCode",{parentName:"p"},"readOnly"),"  or  ",(0,a.kt)("inlineCode",{parentName:"p"},"writeOnly"),".\nMany examples can easily be imagined when used with AsyncAPI or OpenAPI : ",(0,a.kt)("inlineCode",{parentName:"p"},"readOnly"),"  timestamp, ",(0,a.kt)("inlineCode",{parentName:"p"},"writeOnly"),"  password, etc..."),(0,a.kt)("p",null,"Our ",(0,a.kt)("a",{parentName:"p",href:"https://docs.bump.sh/help/specifications-support/asyncapi-support/#readonly-and-writeonly-properties"},"Help Center")," shares more details on how Bump.sh works with this feature and a few examples."))}d.isMDXComponent=!0},1358:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/minlength-example-ac715e95b1b8df25f429c262a84b4e07.png"}}]);