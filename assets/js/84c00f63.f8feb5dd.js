"use strict";(self.webpackChunkbump_sh_github_io=self.webpackChunkbump_sh_github_io||[]).push([[7977],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(n),c=i,k=d["".concat(p,".").concat(c)]||d[c]||u[c]||r;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9742:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const r={},l="Markdown support",o={unversionedId:"specifications-support/markdown-support",id:"specifications-support/markdown-support",title:"Markdown support",description:"Bump supports common Markdown syntax, language color syntax highlighting, and information call-outs. Markdown can be included inside your contract file or as an external reference using dedicated Markdown files. Here's several options that may help.",source:"@site/docs/help/specifications-support/markdown-support.md",sourceDirName:"specifications-support",slug:"/specifications-support/markdown-support",permalink:"/help/specifications-support/markdown-support",draft:!1,editUrl:"https://github.com/bump-sh/docs/tree/main/docs/help/specifications-support/markdown-support.md",tags:[],version:"current",frontMatter:{},sidebar:"help",previous:{title:"AsyncAPI Support",permalink:"/help/specifications-support/asyncapi-support"},next:{title:"Polymorphism",permalink:"/help/specifications-support/polymorphism"}},p={},s=[{value:"Common Markdown syntax support",id:"common-markdown-syntax-support",level:2},{value:"Titles &amp; headings",id:"titles--headings",level:2},{value:"Multi-line code blocks with language color syntax highlighting",id:"multi-line-code-blocks-with-language-color-syntax-highlighting",level:2},{value:"Information call-outs",id:"information-call-outs",level:2},{value:"Images",id:"images",level:2},{value:"Image sizing",id:"image-sizing",level:3},{value:"Markdown files as an external reference",id:"markdown-files-as-an-external-reference",level:2}],m={toc:s};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"markdown-support"},"Markdown support"),(0,i.kt)("p",null,"Bump supports common Markdown syntax, language color syntax highlighting, and information call-outs. Markdown can be included inside your contract file or as an external reference using dedicated Markdown files. Here's several options that may help."),(0,i.kt)("h2",{id:"common-markdown-syntax-support"},"Common Markdown syntax support"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Formatting"),(0,i.kt)("th",{parentName:"tr",align:null},"Markdown Syntax"),(0,i.kt)("th",{parentName:"tr",align:null},"Rendering"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"bold"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"**bold**")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"bold"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"italic"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"_italic_")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("em",{parentName:"td"},"italic"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"link"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[links](https://bump.sh)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://bump.sh/"},"links"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"inline code"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"\u0300 inline code \u0300")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"inline code"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"highlight"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"==highlight==")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://bump.sh/"},"highlight"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"strike-through"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"~~strikethrough~~")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("del",{parentName:"td"},"strikethrough"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"footnote"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Footnote[^1]")),(0,i.kt)("td",{parentName:"tr",align:null},"Footnote",(0,i.kt)("sup",{parentName:"td",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"quotes"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"> quotes")),(0,i.kt)("td",{parentName:"tr",align:null},"> quotes")))),(0,i.kt)("h2",{id:"titles--headings"},"Titles & headings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Heading 1: ",(0,i.kt)("inlineCode",{parentName:"li"},"# A first-level title")),(0,i.kt)("li",{parentName:"ul"},"Heading 2: ",(0,i.kt)("inlineCode",{parentName:"li"},"## A second-level title")),(0,i.kt)("li",{parentName:"ul"},"Heading 3: ",(0,i.kt)("inlineCode",{parentName:"li"},"### A third-level title"))),(0,i.kt)("h2",{id:"multi-line-code-blocks-with-language-color-syntax-highlighting"},"Multi-line code blocks with language color syntax highlighting"),(0,i.kt)("p",null,"E.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-undefined"},'    ```json\n    {\n      "hello": "world",\n      "number": 1,\n      "boolean": true\n    }\n    ```\n')),(0,i.kt)("p",null,"will render:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "hello": "world",\n  "number": 1,\n  "boolean": true\n}\n')),(0,i.kt)("h2",{id:"information-call-outs"},"Information call-outs"),(0,i.kt)("p",null,"Bump support information call-outs (of type ",(0,i.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"warn"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"success")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"error"),") with the quote markdown syntax (lines starting with ",(0,i.kt)("inlineCode",{parentName:"p"},"> ")," ) if the first line contains one of the call-out types."),(0,i.kt)("p",null,"E.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-undefined"},"> info\n> this is an important information to **standout**\n")),(0,i.kt)("p",null,"will render:"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"this is an important information to ",(0,i.kt)("strong",{parentName:"p"},"standout"))),(0,i.kt)("h2",{id:"images"},"Images"),(0,i.kt)("p",null,"Use the following syntax to add images in your markdown"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'![Alt text](/path/to/image.jpg "Image title")\n')),(0,i.kt)("p",null,"Note that even if it's a best practice to always add an ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Alt_attribute#Usage"},"alt text")," for an image, the parameters ",(0,i.kt)("inlineCode",{parentName:"p"},"Alt text")," and ",(0,i.kt)("inlineCode",{parentName:"p"},'"Image title"')," are optional."),(0,i.kt)("h3",{id:"image-sizing"},"Image sizing"),(0,i.kt)("p",null,"If you want to manually set the size of your image you can use Bump.sh ",(0,i.kt)("inlineCode",{parentName:"p"},"=dimension")," parameter just before the closing parenthesis as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'![Alt text](/path/to/image.jpg "Image title" =dimension)\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"=dimension")," uses the following syntax:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"=[width][unit]x[height][unit]\n")),(0,i.kt)("p",null,"for instance using ",(0,i.kt)("inlineCode",{parentName:"p"},"=100pxx50px")," where "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"100")," is the ",(0,i.kt)("inlineCode",{parentName:"li"},"width")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"px")," the ",(0,i.kt)("inlineCode",{parentName:"li"},"unit")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"x")," the ",(0,i.kt)("inlineCode",{parentName:"li"},"separator")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"50")," the ",(0,i.kt)("inlineCode",{parentName:"li"},"height")),(0,i.kt)("li",{parentName:"ul"},"second ",(0,i.kt)("inlineCode",{parentName:"li"},"px")," is ",(0,i.kt)("inlineCode",{parentName:"li"},"unit")," again\nwill output an image with 100 pixels height and 50 pixels width.")),(0,i.kt)("p",null,"At least one ",(0,i.kt)("inlineCode",{parentName:"p"},"height")," ",(0,i.kt)("em",{parentName:"p"},"or")," ",(0,i.kt)("inlineCode",{parentName:"p"},"width")," parameter is mandatory, everything else being optional."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"=100pxx50px   # with everything\n=100x50       # without unit\n=100          # without height (x separator not needed) and unit\n=100px        # without height\n=x50          # without width and unit\n=x50px        # without width\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"If you don't specify a ",(0,i.kt)("inlineCode",{parentName:"li"},"unit")," it will default to pixel"),(0,i.kt)("li",{parentName:"ul"},"If you don't specify ",(0,i.kt)("inlineCode",{parentName:"li"},"width")," ",(0,i.kt)("em",{parentName:"li"},"or")," ",(0,i.kt)("inlineCode",{parentName:"li"},"height"),", the other value will be a ratio calculated from the original size of the image so it doesn't shrink"))),(0,i.kt)("p",null,"You can use any of the following CSS length units as ",(0,i.kt)("inlineCode",{parentName:"p"},"unit"),":"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Absolute units"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cm")," centimeters"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mm")," millimeters"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"in")," inches (1in = 96px = 2.54cm)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"px")," pixels (1px = 1/96th of 1in)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pt")," points (1pt = 1/72 of 1in)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pc")," picas (1pc = 12 pt)")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Relative units"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"em")," relative to the font-size of the element (usually 1em = 16px)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ex")," relative to the x-height of the current font (rarely used)  "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ch"),' relative to the width of the "0" (Unicode U +0030) in the current font'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rem")," relative to font-size of the root element   "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vw")," relative to 1% of the width of the viewport*  "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vh")," relative to 1% of the height of the viewport*   "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vmin")," relative to 1% of viewport's* smaller dimension   "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"vmax")," relative to 1% of viewport's* larger dimension  "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"%")," relative to the parent element")),(0,i.kt)("h2",{id:"markdown-files-as-an-external-reference"},"Markdown files as an external reference"),(0,i.kt)("p",null,"Markdown files can be included as an ",(0,i.kt)("a",{parentName:"p",href:"/help/specifications-support/references"},"external reference")," within your contract document with the $ref syntax ",(0,i.kt)("inlineCode",{parentName:"p"},'$ref: "./path/to/local-markdown.md"'),". In the same way you can extract part of your contract (usually JSON schema of your models into dedicated ",(0,i.kt)("inlineCode",{parentName:"p"},"*.yaml")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"*.json")," files), you can extract your markdown content into dedicated files too."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"E.g.")," Your OpenAPI contract ",(0,i.kt)("inlineCode",{parentName:"p"},"api-contract.yml")," can thus looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'openapi: 3.1.0\ninfo:\n  title: Bump API documentation\n  version: 1.0.0\n  description:\n    $ref: "./docs/introduction.md"\nx-topics:\n  - title: Getting started\n    content:\n      $ref: "./docs/getting-started.md"\n  - title: Use cases\n    content:\n      $ref: "./docs/use-cases.md"\n    example:\n      $ref: "./docs/use-cases-examples.md"\nservers:\n  ...\npaths:\n  ...\n')),(0,i.kt)("p",null,"With files ",(0,i.kt)("inlineCode",{parentName:"p"},"docs/introduction.md"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"docs/getting-started.md"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"docs/use-cases.md")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"docs/use-cases-examples.md")," right next to your contract document, you will be able to generate a comprehensive API documentation with nicely formatted content for your users."),(0,i.kt)("p",null,"It's a great way to include \u201cTopic\u201d sections with handwritten content before the documentation of endpoints/webhooks (or channels in case of an ",(0,i.kt)("a",{parentName:"p",href:"https://www.asyncapi.com/"},"AsyncAPI")," contract) in dedicated Markdown files. Thanks to the ",(0,i.kt)("inlineCode",{parentName:"p"},"x-topics")," top-level property in your contract as ",(0,i.kt)("a",{parentName:"p",href:"/help/doc-topics"},"explained in the dedicated help page"),"."))}d.isMDXComponent=!0}}]);