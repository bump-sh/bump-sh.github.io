I"Ù9<ul id="markdown-toc">
  <li><a href="#installing-bump-cli" id="markdown-toc-installing-bump-cli">Installing Bump CLI</a></li>
  <li><a href="#global-installation" id="markdown-toc-global-installation">Global installation</a></li>
  <li><a href="#add-bump-cli-to-your-node-project" id="markdown-toc-add-bump-cli-to-your-node-project">Add Bump CLI to your node project</a></li>
  <li><a href="#how-should-i-do-if-im-not-using-node" id="markdown-toc-how-should-i-do-if-im-not-using-node">How should I do if Iâ€™m not using Node?</a></li>
  <li><a href="#using-bump-cli" id="markdown-toc-using-bump-cli">Using Bump CLI</a></li>
  <li><a href="#preview-a-file" id="markdown-toc-preview-a-file">Preview a file</a>    <ul>
      <li><a href="#live-preview" id="markdown-toc-live-preview">Live preview</a></li>
    </ul>
  </li>
  <li><a href="#api-diff-or-simple-validation-before-a-deployment" id="markdown-toc-api-diff-or-simple-validation-before-a-deployment">API diff or simple validation before a deployment</a>    <ul>
      <li><a href="#api-diff-of-your-changes" id="markdown-toc-api-diff-of-your-changes">API diff of your changes</a></li>
      <li><a href="#validation-before-a-deployment" id="markdown-toc-validation-before-a-deployment">Validation before a deployment</a></li>
    </ul>
  </li>
  <li><a href="#deploy-a-file" id="markdown-toc-deploy-a-file">Deploy a file</a></li>
  <li><a href="#deploy-a-folder" id="markdown-toc-deploy-a-folder">Deploy a folder</a></li>
  <li><a href="#compatible-specification-types" id="markdown-toc-compatible-specification-types">Compatible specification types</a></li>
  <li><a href="#contributing" id="markdown-toc-contributing">Contributing</a></li>
  <li><a href="#license" id="markdown-toc-license">License</a></li>
</ul>

<p>How to use the Bump command line interface.</p>

<h2 id="installing-bump-cli">Installing Bump CLI</h2>

<p>Bump CLI is a node package, currently <a href="https://www.npmjs.com/package/bump-cli">distributed via NPM</a> which means you need to have Node v12+ interpreter installed on your computer and servers.</p>

<p>:::info
You can download a standalone package directly from the <a href="https://github.com/bump-sh/cli/releases">latest Github release</a> assets if you donâ€™t use Node. We plan to distribute universal binaries to common package managers soon. Please check our <a href="https://github.com/bump-sh/bump-node-cli#installation">installation methods</a> for updates.
:::</p>

<h2 id="global-installation">Global installation</h2>

<p>To install it globally, run the following command with NPM</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> bump-cli
</code></pre></div></div>

<p>Or, with Yarn via</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn global add bump-cli
</code></pre></div></div>

<h2 id="add-bump-cli-to-your-node-project">Add Bump CLI to your node project</h2>

<p>As our CLI is a node package, you can easily embed it to your project by adding the package to your <code class="highlighter-rouge">package.json</code> file, either via NPM</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">--save-dev</span> bump-cli
</code></pre></div></div>

<p>Or via Yarn</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn add <span class="nt">--dev</span> bump-cli
</code></pre></div></div>

<p>You can then use any Bump CLI commands via <code class="highlighter-rouge">npm exec</code> as such</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">exec</span> <span class="nt">--</span> bump <span class="nt">--help</span>
</code></pre></div></div>

<h2 id="how-should-i-do-if-im-not-using-node">How should I do if Iâ€™m not using Node?</h2>

<p>Unfortunately, at the moment we only support the Node environment. However we plan to distribute universal binaries in the most common package managers very soon. In the meantime, you can download a standalone package directly from the <a href="https://github.com/bump-sh/cli/releases">latest Github release</a> assets or you can push your documentation using <a href="https://developers.bump.sh/">our API</a>.</p>

<h2 id="using-bump-cli">Using Bump CLI</h2>

<p>To list all the available commands, just type <code class="highlighter-rouge">bump</code>  in your command line environment. You can get some help anytime by using <code class="highlighter-rouge">--help</code> on any command. Example: <code class="highlighter-rouge">bump deploy --help</code> .</p>

<h2 id="preview-a-file">Preview a file</h2>

<p>When writing a documentation, youâ€™ll want to preview how it renders on Bump. This is exactly the goal of the <code class="highlighter-rouge">preview</code>  command: it will create a temporary documentation with a unique URL, which will be available for a short period of time.</p>

<p>Usage from a local OpenAPI or AsyncAPI file</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump preview path/to/file.json
</code></pre></div></div>

<p>You can also preview a file available from a URL</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump preview https://developers.bump.sh/source.yaml
</code></pre></div></div>

<h3 id="live-preview">Live preview</h3>

<p>By using the <code class="highlighter-rouge">--live</code> flag you can stay focused on API design (OpenAPI or AsyncAPI file) while seeing a continuously updated preview each time you save your API definition file.</p>

<ul>
  <li>Launch the live preview command in your terminal</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump preview <span class="nt">--live</span> <span class="nt">--open</span> openapi-definition.json
</code></pre></div></div>

<ul>
  <li>Edit your <code class="highlighter-rouge">openapi-definition.json</code> file in your favorite text editor</li>
  <li>Watch the live preview being updated each time your save your file!</li>
</ul>

<p>:::info
You can create as many previews as you like without being authenticated. This is a <strong>free and unlimited service</strong>.
:::</p>

<h2 id="api-diff-or-simple-validation-before-a-deployment">API diff or simple validation before a deployment</h2>

<p>This is mainly used when you integrate Bump in your automated environments (<a href="continuous-integration/index">Continuous Integration</a>). It will validate your documentation file to make sure it is parsed correctly by Bump. If you want to validate your API specification file before a deployment, you can either use:</p>

<ul>
  <li><a href="#api-diff-of-your-changes">the <code class="highlighter-rouge">bump diff</code> command</a> if you also want to have a human diff summary of your API change</li>
</ul>

<p><em>or</em></p>

<ul>
  <li><a href="#validation-before-a-deployment">the <code class="highlighter-rouge">bump deploy --dry-run</code> command</a> if you only want to make sure the file is valid</li>
</ul>

<h3 id="api-diff-of-your-changes">API diff of your changes</h3>

<p>This command will output a diff summary of what has changed in the API. It can be used to ensure that future file deployment will work smoothly and to get a human diff summary during code reviews.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump diff path/to/file.json <span class="nt">--doc</span> my-documentation
</code></pre></div></div>

<p>You can find your own <code class="highlighter-rouge">my-documentation</code> slug from your <a href="https://bump.sh/docs">documentation settings</a>.</p>

<p>:::caution
You will need to pass your private documentation access token for this command to work. Either with the <code class="highlighter-rouge">--token</code> flag or via the <code class="highlighter-rouge">BUMP_TOKEN</code> environment variable. This token can be found from your documentation <code class="highlighter-rouge">settings &gt; CI deployment</code>page
:::</p>

<h3 id="validation-before-a-deployment">Validation before a deployment</h3>

<p>If you donâ€™t need a diff summary from the <code class="highlighter-rouge">bump diff</code> command explained above, you can also make sure your API specification file is valid and parsed correctly by Bump with the <code class="highlighter-rouge">bump deploy --dry-run</code> command. It can be used to ensure that future file deployment will work smoothly.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump deploy <span class="nt">--dry-run</span> path/to/file.json <span class="nt">--doc</span> my-documentation
</code></pre></div></div>

<p>You can find your own <code class="highlighter-rouge">my-documentation</code> slug from your <a href="https://bump.sh/docs">documentation settings</a>.</p>

<p>:::caution
You will need to pass your private documentation access token for this command to work. Either with the <code class="highlighter-rouge">--token</code> flag or via the <code class="highlighter-rouge">BUMP_TOKEN</code> environment variable. This token can be found from your documentation <code class="highlighter-rouge">settings &gt; CI deployment</code>page
:::</p>

<h2 id="deploy-a-file">Deploy a file</h2>

<p>Once your documentation has been updated and merged, you want it to be live for your API users. This is what the <code class="highlighter-rouge">deploy</code> command is for. When deploying the new version, Bump will analyse your API structure and will generate a changelog item if the API structure has changed.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump deploy path/to/file.json <span class="nt">--doc</span> my-documentation
</code></pre></div></div>

<p>You can find your own <code class="highlighter-rouge">my-documentation</code> slug from your <a href="https://bump.sh/docs">documentation settings</a>.</p>

<p>You can also deploy a given file to a different branch of your documentation with the <code class="highlighter-rouge">--branch &lt;branch-name&gt;</code> parameter. The branch will be created if it doesnâ€™t exist. More details about the branching feature is available on <a href="../branching">this dedicated help page</a>.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump deploy path/to/file.json <span class="nt">--doc</span> my-documentation <span class="nt">--branch</span> staging
</code></pre></div></div>

<p>:::caution
You will need to pass your private documentation access token for this command to work. Either with the <code class="highlighter-rouge">--token</code> flag or via the <code class="highlighter-rouge">BUMP_TOKEN</code> environment variable. This token can be found from your documentation <code class="highlighter-rouge">settings &gt; CI deployment</code>page.
:::</p>

<h2 id="deploy-a-folder">Deploy a folder</h2>

<p>When using the <a href="../hubs">Hub</a> feature on Bump.sh, you might want to deploy multiple api definition files in a single command. The <code class="highlighter-rouge">deploy</code> command described in the <a href="#deploy-a-file">previous paragraph</a> accepts a folder path as argument to do just that:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump deploy path/to/apis/ <span class="nt">--hub</span> my-hub
</code></pre></div></div>

<p>:::info
You can find your own <code class="highlighter-rouge">my-hub</code> slug from your <a href="https://bump.sh/hubs">hub settings</a>.
:::</p>

<p>Take into account your file naming convention by using the <code class="highlighter-rouge">--filename-pattern &lt;pattern&gt;</code> option.</p>

<p>Note that it can include <code class="highlighter-rouge">*</code> wildcard special character, <code class="highlighter-rouge">{slug}</code> filter that will extract your documentationâ€™s slug from the filename, as well as any other fixed characters.</p>

<p>Hereâ€™s a practical example. Suppose you have the following files in your <code class="highlighter-rouge">path/to/apis/</code> directory:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>path/to/apis
â””â”€ private-api-users-service.json
â””â”€ partner-api-payments-service.yml
â””â”€ public-api-contracts-service.yml
â””â”€ data.json
â””â”€ README
</code></pre></div></div>

<p>In order to deploy the 3 services api definition files from this folder (<code class="highlighter-rouge">private-api-users-service.json</code>, <code class="highlighter-rouge">partner-api-payments-service.yml</code> and <code class="highlighter-rouge">public-api-contracts-service.yml</code>). You can execute the following command:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bump deploy path/to/apis/ <span class="nt">--hub</span> my-hub <span class="nt">--filename-pattern</span> <span class="k">*</span><span class="nt">-api-</span><span class="o">{</span>slug<span class="o">}</span><span class="nt">-service</span>
</code></pre></div></div>

<p>:::caution
You will need to pass your private hub access token for this command to work. Either with the <code class="highlighter-rouge">--token</code> flag or via the <code class="highlighter-rouge">BUMP_TOKEN</code> environment variable. This token can be found from your hub <code class="highlighter-rouge">settings &gt; CI deployment</code> page.
:::</p>

<h2 id="compatible-specification-types">Compatible specification types</h2>

<p>We currently support <a href="https://github.com/OAI/OpenAPI-Specification">OpenAPI</a> from 2.0 (called Swagger) to 3.1 and <a href="https://www.asyncapi.com/docs/reference/specification/v2.5.0">AsyncAPI 2.x</a> specification file types. Both YAML or JSON file formats are accepted file inputs to the CLI.</p>

<h2 id="contributing">Contributing</h2>

<p>Bug reports and pull requests are welcome on GitHub at <a href="https://github.com/bump-sh/cli">https://github.com/bump-sh/cli</a>. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the <a href="http://contributor-covenant.org">Contributor Covenant</a> code of conduct.</p>

<h2 id="license">License</h2>

<p>The Bump CLI project is released under the <a href="http://opensource.org/licenses/MIT">MIT License</a>.</p>

:ET