I"e&<ul id="markdown-toc">
  <li><a href="#endpoints-and-webhooks-are-resources" id="markdown-toc-endpoints-and-webhooks-are-resources">Endpoints and Webhooks are resources</a>    <ul>
      <li><a href="#group-by-tag" id="markdown-toc-group-by-tag">Group by tag</a></li>
      <li><a href="#group-by-path" id="markdown-toc-group-by-path">Group by path</a></li>
      <li><a href="#webhooks" id="markdown-toc-webhooks">Webhooks</a></li>
    </ul>
  </li>
</ul>

<p>In the Bump.sh console, if you click on any of your documentations and select <strong>Customize UI</strong> in the left menu, you can scroll down to <strong>How to group operations?</strong>. There are three options available:</p>
<ul>
  <li><code class="highlighter-rouge">(default)</code>
The default behaviour of Bump.sh is automatic grouping based on the presence of a list of top-level <code class="highlighter-rouge">tags</code>. More on that in <a href="#group-by-tag">the <code class="highlighter-rouge">Group by tags</code> section</a>.</li>
  <li><a href="#group-by-tag"><code class="highlighter-rouge">Group by tags</code></a></li>
  <li><a href="#group-by-path"><code class="highlighter-rouge">Group by path</code></a></li>
</ul>

<p>But first let’s provide a bit more context on endpoints and webhooks.</p>

<h2 id="endpoints-and-webhooks-are-resources">Endpoints and Webhooks are resources</h2>

<p>REST APIs are composed of a set of possible requests, from server to server.</p>

<ul>
  <li>In the API context, endpoints are most of the time <a href="https://en.wikipedia.org/wiki/URL">URLs</a> that provides the location of a specific resource on an API server.
With OpenAPI, endpoints are stored under the resource <code class="highlighter-rouge">paths</code>.</li>
</ul>

<p>OR</p>

<ul>
  <li>Webhooks are requests that can be generated from the API to the external server, after a specific event occurred. Webhooks are stored with OpenAPI 3.1 under resource <code class="highlighter-rouge">webhooks</code></li>
</ul>

<p>Here’s how we describe, sort and group these resources, based on an OpenAPI specification example. Below is an overview of the full specification you can find on <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/petstore.yaml">OpenAPI Specification examples repo.</a></p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">openapi</span><span class="pi">:</span> <span class="s2">"</span><span class="s">3.0.0"</span>
<span class="na">info</span><span class="pi">:</span>
  <span class="na">title</span><span class="pi">:</span> <span class="s">Swagger Petstore</span>
<span class="na">paths</span><span class="pi">:</span>
  <span class="na">/pets</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">List all pets</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">listPets</span>
      <span class="na">tags</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">all pets</span>
      <span class="c1"># ...</span>

    <span class="na">post</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Create a pet</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">createPets</span>
      <span class="na">tags</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">single pet</span>
      <span class="c1"># ...</span>
  <span class="s">/pets/{petId}</span><span class="err">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Info for a specific pet</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">showPetById</span>
      <span class="na">tags</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">single pet</span>
      <span class="c1"># ...</span>

</code></pre></div></div>

<p>There are three operations here, and three different ways to generate, group and order them, regarding option chosen for <strong>How to group operations?</strong></p>

<p><img src="/images/help/legacy/-MU8HgDhZXrUBOih-Aa4.png" alt="Group by path or group by tag?" /></p>

<h3 id="group-by-tag">Group by tag</h3>

<blockquote class="warning">
  <p>Be careful about operations without tags when option <code class="highlighter-rouge">Group operations by tag</code> is selected, as they would be ignored!</p>
</blockquote>

<p>You may have noticed in the above API Contract that there are two different <code class="highlighter-rouge">tags</code>: <code class="highlighter-rouge">all pets</code> and <code class="highlighter-rouge">single pet</code>.
If you choose option <code class="highlighter-rouge">Group by tag</code>, Bump.sh will use these <code class="highlighter-rouge">tags</code> to group, name and sort the operations.</p>

<p>Here is our <a href="https://bump.sh/hub/examples/doc/petstore-grouped-by-tags">Petstore live example</a>, based on the OpenAPI specification, with option <code class="highlighter-rouge">Group by tag</code> :</p>

<p><img src="/images/help/group-by-tags-dark.png" alt="Group Petstore operations by tag" /></p>

<blockquote>
  <p>If first level field <code class="highlighter-rouge">tags</code> are present at the <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3#openapi-object">root of your OpenAPI document object</a>, Bump.sh will use <code class="highlighter-rouge">Group by tags</code> as a default documentation generation behaviour.
{. :info}</p>
</blockquote>

<p>Having this first level field <code class="highlighter-rouge">tags</code> allows you to override how your <code class="highlighter-rouge">endpoints</code> are ordered. Take the following API Contract sample:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">tags</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">single pet</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">all operations related to managing a single pet</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">all pets</span>
    <span class="na">description</span><span class="pi">:</span> <span class="s">all operations related to managing all pets</span>
<span class="na">paths</span><span class="pi">:</span>
  <span class="c1"># ...</span>
</code></pre></div></div>

<p>With these first level tags, endpoints <code class="highlighter-rouge">Single Pet</code> would be displayed above <code class="highlighter-rouge">All pets</code> in the left menu of your documentation.</p>

<p>Note that you can also provide a <code class="highlighter-rouge">description</code> for your <code class="highlighter-rouge">tags</code>. This description will be displayed just under the <code class="highlighter-rouge">name</code> of the <code class="highlighter-rouge">tag</code> at the top level of your <code class="highlighter-rouge">tag</code> documentation page.</p>

<p>This option <code class="highlighter-rouge">Group by tag</code> allows a better customization of your doc, by overriding resources name.</p>

<h3 id="group-by-path">Group by path</h3>

<p>In this case, we deduce endpoint name from related <code class="highlighter-rouge">path</code>. First part of the path is extracted to generate the <code class="highlighter-rouge">endpoint</code> name, and every operation related to this endpoint name will be grouped together.</p>

<p>Let’s Bump it up to something visual with a <a href="https://bump.sh/hub/examples/doc/petstore">Petstore live example</a>:</p>

<p><img src="/images/help/group-by-path-dark.png" alt="Group petstore operations by path" /></p>

<p>Operations <code class="highlighter-rouge">GET</code> and <code class="highlighter-rouge">POST</code> from <code class="highlighter-rouge">/pets</code> , and <code class="highlighter-rouge">GET</code> from <code class="highlighter-rouge">/pets/{petId}</code> are grouped under same endpoint <code class="highlighter-rouge">Pets</code> (first part of the path), and their names are generated from field <code class="highlighter-rouge">summary</code>.</p>

<h3 id="webhooks">Webhooks</h3>

<p>And what about webhooks?</p>

<p>It’s quite well explained how webhooks name are generated from <code class="highlighter-rouge">summary</code>, <code class="highlighter-rouge">description</code>  in <a href="../webhooks">Webhooks documentation’s page</a>. But by choosing option <code class="highlighter-rouge">Group by tag</code>, <code class="highlighter-rouge">webhooks</code> are displayed, grouped and ordered with same rules as for <code class="highlighter-rouge">endpoints</code>.</p>

<blockquote class="warning">
  <p>Be careful about webhooks without tags when option <code class="highlighter-rouge">Group by tag</code> is selected, as they would be ignored!</p>
</blockquote>

<p>Two possibilities for this OpenAPI 3.1 documentation with endpoints and webhooks, on our <a href="https://bump.sh/hub/examples">examples hub</a>:</p>

<ul>
  <li><a href="https://bump.sh/hub/examples/doc/webhooks-extended">Resources grouped by path</a></li>
  <li><a href="https://bump.sh/hub/examples/doc/webhooks-extended-grouped-by-tags">Resources grouped by tags</a></li>
</ul>

<p>Finally, we hope these options will help you build the most readable documentations, feel free to <a href="mailto:hello@bump.sh">contact us</a> if you need support or have some suggestion.</p>

:ET